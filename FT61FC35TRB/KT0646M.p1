Version 3.2   GCC8 Compiled Intermediate Code
"47 FT61FC3x_IIC.H
[v _IIC_WRITE_MULTI `(v ~T0 @X0 0 ef4`uc`uc`*uc`ui ]
"45
[v _IIC_READ_MULTI `(v ~T0 @X0 0 ef4`uc`uc`*uc`ui ]
"60 KT0646M.c
[v _soft_iic_init `(i ~T0 @X0 0 ef ]
"39 FT61FC3x_IIC.H
[v _DelayUs `(v ~T0 @X0 0 ef1`uc ]
"384 KT0646M.h
[v _KT_WirelessMicTx_COMPANDOR_Dis `(v ~T0 @X0 0 ef1`uc ]
"355
[v _KT_WirelessMicTx_Mic_Sens `(uc ~T0 @X0 0 ef1`uc ]
"349
[v _KT_WirelessMicTx_PowerDownProcedure `(v ~T0 @X0 0 ef ]
"366 KT0646M.c
[v _log_info `(i ~T0 @X0 0 ef ]
"92 C:\Program Files (x86)\CCompiler\Compiler\data\include\stdlib.h
[v _abs `(i ~T0 @X0 0 ef1`i ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;gcc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;stdbool.h: 12: typedef unsigned char bool;
[; ;FT61FC35TRB_CONFIG.H: 27: typedef unsigned char u8;
[; ;FT61FC35TRB_CONFIG.H: 28: typedef char s8;
[; ;FT61FC35TRB_CONFIG.H: 29: typedef unsigned short u16;
[; ;FT61FC35TRB_CONFIG.H: 30: typedef signed short s16;
[; ;FT61FC35TRB_CONFIG.H: 31: typedef unsigned int u32;
[; ;FT61FC35TRB_CONFIG.H: 32: typedef signed int s32;
[; ;FT61FC35TRB_CONFIG.H: 33: typedef unsigned long long u64;
[; ;FT61FC35TRB_CONFIG.H: 34: typedef u32 FOURCC;
[; ;FT61FC35TRB_CONFIG.H: 35: typedef long long s64;
[; ;FT61FC35TRB_CONFIG.H: 36: typedef unsigned long long u64;
[; ;FT61FC3x_IIC.H: 37: void IIC_INITIAL(void);
[; ;FT61FC3x_IIC.H: 39: void DelayUs(unsigned char Time);
[; ;FT61FC3x_IIC.H: 41: unsigned char IIC_READ(unsigned char i2c_address, unsigned char reg);
[; ;FT61FC3x_IIC.H: 43: void IIC_WRITE(unsigned char i2c_address, unsigned char reg,unsigned char data);
[; ;FT61FC3x_IIC.H: 45: void IIC_READ_MULTI(unsigned char i2c_address, unsigned char reg, unsigned char *pData, unsigned int length);
[; ;FT61FC3x_IIC.H: 47: void IIC_WRITE_MULTI(unsigned char i2c_address, unsigned char reg, unsigned char *pData, unsigned int length);
[; ;KT0646M.h: 343: u16 KT_WirelessMicTx_PreInit(void);
[; ;KT0646M.h: 344: bool KT_Test_Init(void);
[; ;KT0646M.h: 345: bool KT_WirelessMicTx_Init(void);
[; ;KT0646M.h: 347: bool KT_WirelessMicTx_Standby(void);
[; ;KT0646M.h: 348: bool KT_WirelessMicTx_WakeUp(void);
[; ;KT0646M.h: 349: void KT_WirelessMicTx_PowerDownProcedure(void);
[; ;KT0646M.h: 351: bool KT_WirelessMicTx_PASW(bool bPA_Switch);
[; ;KT0646M.h: 352: bool KT_WirelessMicTx_PAGain(u8 cPaGain);
[; ;KT0646M.h: 354: u8 KT_WirelessMicTx_Fdev_Monitor(void);
[; ;KT0646M.h: 355: bool KT_WirelessMicTx_Mic_Sens(u8 cMicSens);
[; ;KT0646M.h: 356: bool KT_WirelessMicTx_Comp_Dis(bool bComp_Dis);
[; ;KT0646M.h: 357: bool KT_WirelessMicTx_Comp_TC(u8 cComp_TC);
[; ;KT0646M.h: 358: bool KT_WirelessMicTx_MuteSel(bool bMute_Sel);
[; ;KT0646M.h: 360: bool KT_WirelessMicTx_Pilot(bool bPilot_Dis);
[; ;KT0646M.h: 361: bool KT_WirelessMicTx_Pilot_Fdev(u8 cPilot_Fdev);
[; ;KT0646M.h: 367: bool KT_WirelessMicTx_Tune(s32 Freq);
[; ;KT0646M.h: 369: u8 KT_WirelessMicTx_Band_Cali_Res(void);
[; ;KT0646M.h: 370: u8 KT_WirelessMicTx_Set_XTAL(bool bXtal_Sel);
[; ;KT0646M.h: 371: u8 KT_WirelessMicTx_SW_XTAL_Freq(bool bXtal_Sel);
[; ;KT0646M.h: 373: void Delay_ms(u16 iTime_Number);
[; ;KT0646M.h: 374: void KT_Bus_Write(u8 Register_Address, u16 Word_Data);
[; ;KT0646M.h: 375: u16 KT_Bus_Read(u8 Register_Address);
[; ;KT0646M.h: 377: void KT_WirelessMicTx_ECHO(bool bEcho_Dis,u8 Echo_Ratio,u8 Echo_Delay);
[; ;KT0646M.h: 378: void KT_WirelessMicTx_EQSW(bool bEq_Dis);
[; ;KT0646M.h: 379: void KT_WirelessMicTx_EQGAIN(u8 Eq_Freq,u8 Eq_Gain);
[; ;KT0646M.h: 380: u16 KT_WirelessMicTx_BatteryMeter_Read(void);
[; ;KT0646M.h: 381: bool KT_WirelessMicTx_BatteryMeter_SW(bool bBatteryMeter_En);
[; ;KT0646M.h: 382: u8 KT_WirelessMicTx_Read_Mic_Sens(void);
[; ;KT0646M.h: 383: bool KT_WirelessMicTx_Mic_Sens(u8 cMicSens);
[; ;KT0646M.h: 384: void KT_WirelessMicTx_COMPANDOR_Dis(bool COMP_Dis);
[; ;KT0646M.h: 386: int host_iic_send_data(u8 id, u8 reg, u8 *data, u16 len);
[; ;KT0646M.h: 387: int host_iic_read_data(u8 id, u8 reg, u8 *data, u16 len);
[; ;math.h: 30: extern double fabs(double);
[; ;math.h: 31: extern double floor(double);
[; ;math.h: 32: extern double ceil(double);
[; ;math.h: 33: extern double modf(double, double *);
[; ;math.h: 34: extern double sqrt(double);
[; ;math.h: 35: extern double atof(const char *);
[; ;math.h: 36: extern double sin(double) ;
[; ;math.h: 37: extern double cos(double) ;
[; ;math.h: 38: extern double tan(double) ;
[; ;math.h: 39: extern double asin(double) ;
[; ;math.h: 40: extern double acos(double) ;
[; ;math.h: 41: extern double atan(double);
[; ;math.h: 42: extern double atan2(double, double) ;
[; ;math.h: 43: extern double log(double);
[; ;math.h: 44: extern double log10(double);
[; ;math.h: 45: extern double pow(double, double) ;
[; ;math.h: 46: extern double exp(double) ;
[; ;math.h: 47: extern double sinh(double) ;
[; ;math.h: 48: extern double cosh(double) ;
[; ;math.h: 49: extern double tanh(double);
[; ;math.h: 50: extern double eval_poly(double, const double *, int);
[; ;math.h: 51: extern double frexp(double, int *);
[; ;math.h: 52: extern double ldexp(double, int);
[; ;math.h: 53: extern double fmod(double, double);
[; ;math.h: 54: extern double trunc(double);
[; ;math.h: 55: extern double round(double);
[; ;KT0646M.h: 343: u16 KT_WirelessMicTx_PreInit(void);
[; ;KT0646M.h: 344: bool KT_Test_Init(void);
[; ;KT0646M.h: 345: bool KT_WirelessMicTx_Init(void);
[; ;KT0646M.h: 347: bool KT_WirelessMicTx_Standby(void);
[; ;KT0646M.h: 348: bool KT_WirelessMicTx_WakeUp(void);
[; ;KT0646M.h: 349: void KT_WirelessMicTx_PowerDownProcedure(void);
[; ;KT0646M.h: 351: bool KT_WirelessMicTx_PASW(bool bPA_Switch);
[; ;KT0646M.h: 352: bool KT_WirelessMicTx_PAGain(u8 cPaGain);
[; ;KT0646M.h: 354: u8 KT_WirelessMicTx_Fdev_Monitor(void);
[; ;KT0646M.h: 355: bool KT_WirelessMicTx_Mic_Sens(u8 cMicSens);
[; ;KT0646M.h: 356: bool KT_WirelessMicTx_Comp_Dis(bool bComp_Dis);
[; ;KT0646M.h: 357: bool KT_WirelessMicTx_Comp_TC(u8 cComp_TC);
[; ;KT0646M.h: 358: bool KT_WirelessMicTx_MuteSel(bool bMute_Sel);
[; ;KT0646M.h: 360: bool KT_WirelessMicTx_Pilot(bool bPilot_Dis);
[; ;KT0646M.h: 361: bool KT_WirelessMicTx_Pilot_Fdev(u8 cPilot_Fdev);
[; ;KT0646M.h: 367: bool KT_WirelessMicTx_Tune(s32 Freq);
[; ;KT0646M.h: 369: u8 KT_WirelessMicTx_Band_Cali_Res(void);
[; ;KT0646M.h: 370: u8 KT_WirelessMicTx_Set_XTAL(bool bXtal_Sel);
[; ;KT0646M.h: 371: u8 KT_WirelessMicTx_SW_XTAL_Freq(bool bXtal_Sel);
[; ;KT0646M.h: 373: void Delay_ms(u16 iTime_Number);
[; ;KT0646M.h: 374: void KT_Bus_Write(u8 Register_Address, u16 Word_Data);
[; ;KT0646M.h: 375: u16 KT_Bus_Read(u8 Register_Address);
[; ;KT0646M.h: 377: void KT_WirelessMicTx_ECHO(bool bEcho_Dis,u8 Echo_Ratio,u8 Echo_Delay);
[; ;KT0646M.h: 378: void KT_WirelessMicTx_EQSW(bool bEq_Dis);
[; ;KT0646M.h: 379: void KT_WirelessMicTx_EQGAIN(u8 Eq_Freq,u8 Eq_Gain);
[; ;KT0646M.h: 380: u16 KT_WirelessMicTx_BatteryMeter_Read(void);
[; ;KT0646M.h: 381: bool KT_WirelessMicTx_BatteryMeter_SW(bool bBatteryMeter_En);
[; ;KT0646M.h: 382: u8 KT_WirelessMicTx_Read_Mic_Sens(void);
[; ;KT0646M.h: 383: bool KT_WirelessMicTx_Mic_Sens(u8 cMicSens);
[; ;KT0646M.h: 384: void KT_WirelessMicTx_COMPANDOR_Dis(bool COMP_Dis);
[; ;KT0646M.h: 386: int host_iic_send_data(u8 id, u8 reg, u8 *data, u16 len);
[; ;KT0646M.h: 387: int host_iic_read_data(u8 id, u8 reg, u8 *data, u16 len);
[; ;microphone.h: 31: typedef struct
[; ;microphone.h: 32: {
[; ;microphone.h: 33: u32 flash_key;
[; ;microphone.h: 34: s32 freq;
[; ;microphone.h: 36: u8 PA_gain;
[; ;microphone.h: 38: u8 EQ_EN;
[; ;microphone.h: 39: u8 EQ[15];
[; ;microphone.h: 41: u8 PILOT_EN;
[; ;microphone.h: 42: u16 PILOT_DATA[4];
[; ;microphone.h: 43: u8 channel;
[; ;microphone.h: 44: u8 PA_state;
[; ;microphone.h: 45: u8 ch_power_count;
[; ;microphone.h: 46: }mic_config_t;
[; ;microphone.h: 48: typedef struct
[; ;microphone.h: 49: {
[; ;microphone.h: 50: u8 cmd;
[; ;microphone.h: 51: u8 len;
[; ;microphone.h: 52: u8 cmd_data[64];
[; ;microphone.h: 53: }microphone_setting_t;
[; ;microphone.h: 55: typedef struct
[; ;microphone.h: 56: {
[; ;microphone.h: 57: u16 channel;
[; ;microphone.h: 58: u32 freq;
[; ;microphone.h: 59: }microphone_status_t;
[; ;microphone.h: 61: extern mic_config_t mic_config;
[; ;microphone.h: 63: extern u32 tick_microphone_new_cmd;
[; ;microphone.h: 64: extern microphone_setting_t microphone_setting;
[; ;microphone.h: 68: int microphone_init();
[; ;microphone.h: 70: bool KT_MicTX_Init(void);
[; ;microphone.h: 72: int microphone_set_freq();
[; ;microphone.h: 74: void process_microphone();
[; ;microphone.h: 76: int microphone_set_PA0();
[; ;microphone.h: 78: void microphone_enable(bool enable);
[; ;microphone.h: 79: int microphone_pairing(s32 Freq,u8 ch);
[; ;microphone.h: 80: void microphone_AUX_Disconnect();
[; ;microphone.h: 81: void microphone_AUX_mute();
[; ;microphone.h: 82: void microphone_AUX_unmute();
[; ;microphone.h: 83: void KT_mic_config_t_print(mic_config_t mic_config);
[; ;microphone.h: 84: void KT0646_setchangeBattery();
[; ;microphone.h: 85: void KT0646_setchangekey(u8 key);
"41 KT0646M.c
[v _kt_bus_rx_buff `uc ~T0 @X0 -> 2 `i s ]
[i _kt_bus_rx_buff
:U ..
-> -> 0 `i `uc
..
]
[; ;KT0646M.c: 41: static u8 kt_bus_rx_buff[2] = {0};
"42
[v _kt_bus_tx_buff `uc ~T0 @X0 -> 2 `i s ]
[i _kt_bus_tx_buff
:U ..
-> -> 0 `i `uc
..
]
[; ;KT0646M.c: 42: static u8 kt_bus_tx_buff[2] = {0};
"45
[v _host_iic_send_data `(i ~T0 @X0 1 ef4`uc`uc`*uc`us ]
"46
{
[; ;KT0646M.c: 45: int host_iic_send_data(u8 id, u8 reg, u8 *data, u16 len)
[; ;KT0646M.c: 46: {
[e :U _host_iic_send_data ]
"45
[v _id `uc ~T0 @X0 1 r1 ]
[v _reg `uc ~T0 @X0 1 r2 ]
[v _data `*uc ~T0 @X0 1 r3 ]
[v _len `us ~T0 @X0 1 r4 ]
"46
[f ]
[; ;KT0646M.c: 47: IIC_WRITE_MULTI(0x6A, reg, data, len);
"47
[e ( _IIC_WRITE_MULTI (4 , , , -> -> 106 `i `uc _reg _data -> _len `ui ]
[; ;KT0646M.c: 48: }
"48
[e :UE 8 ]
}
"50
[v _host_iic_read_data `(i ~T0 @X0 1 ef4`uc`uc`*uc`us ]
"51
{
[; ;KT0646M.c: 50: int host_iic_read_data(u8 id, u8 reg, u8 *data, u16 len)
[; ;KT0646M.c: 51: {
[e :U _host_iic_read_data ]
"50
[v _id `uc ~T0 @X0 1 r1 ]
[v _reg `uc ~T0 @X0 1 r2 ]
[v _data `*uc ~T0 @X0 1 r3 ]
[v _len `us ~T0 @X0 1 r4 ]
"51
[f ]
[; ;KT0646M.c: 52: IIC_READ_MULTI(0x6B, reg, data, len);
"52
[e ( _IIC_READ_MULTI (4 , , , -> -> 107 `i `uc _reg _data -> _len `ui ]
[; ;KT0646M.c: 53: }
"53
[e :UE 9 ]
}
"56
[v _KT_Bus_Init `(v ~T0 @X0 1 ef ]
"57
{
[; ;KT0646M.c: 56: void KT_Bus_Init(void)
[; ;KT0646M.c: 57: {
[e :U _KT_Bus_Init ]
[f ]
[; ;KT0646M.c: 60: soft_iic_init(0);
"60
[e ( _soft_iic_init -> 0 `i ]
[; ;KT0646M.c: 61: }
"61
[e :UE 10 ]
}
"76
[v _KT_Bus_Write `(v ~T0 @X0 1 ef2`uc`us ]
"77
{
[; ;KT0646M.c: 76: void KT_Bus_Write(u8 Register_Address, u16 Word_Data)
[; ;KT0646M.c: 77: {
[e :U _KT_Bus_Write ]
"76
[v _Register_Address `uc ~T0 @X0 1 r1 ]
[v _Word_Data `us ~T0 @X0 1 r2 ]
"77
[f ]
"78
[v _ret `i ~T0 @X0 1 a ]
[; ;KT0646M.c: 78: int ret = 0;
[e = _ret -> 0 `i ]
[; ;KT0646M.c: 79: kt_bus_tx_buff[1] = (u8)(Word_Data & 0x00FF);
"79
[e = *U + &U _kt_bus_tx_buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _kt_bus_tx_buff `ui `ux -> & -> _Word_Data `ui -> -> 255 `i `ui `uc ]
[; ;KT0646M.c: 80: kt_bus_tx_buff[0] = (u8)(Word_Data >> 8 & 0x00FF);
"80
[e = *U + &U _kt_bus_tx_buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _kt_bus_tx_buff `ui `ux -> & >> -> _Word_Data `ui -> 8 `i -> -> 255 `i `ui `uc ]
[; ;KT0646M.c: 81: ret = host_iic_send_data(0, Register_Address, kt_bus_tx_buff, 2);
"81
[e = _ret ( _host_iic_send_data (4 , , , -> -> 0 `i `uc _Register_Address &U _kt_bus_tx_buff -> -> 2 `i `us ]
[; ;KT0646M.c: 82: }
"82
[e :UE 11 ]
}
"95
[v _KT_Bus_Read `(us ~T0 @X0 1 ef1`uc ]
"96
{
[; ;KT0646M.c: 95: u16 KT_Bus_Read(u8 Register_Address)
[; ;KT0646M.c: 96: {
[e :U _KT_Bus_Read ]
"95
[v _Register_Address `uc ~T0 @X0 1 r1 ]
"96
[f ]
"97
[v _reg_value `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 97: u16 reg_value = 0;
[e = _reg_value -> -> 0 `i `us ]
"98
[v _ret1 `i ~T0 @X0 1 a ]
[; ;KT0646M.c: 98: int ret1 = 0;
[e = _ret1 -> 0 `i ]
[; ;KT0646M.c: 99: ret1 = host_iic_read_data(0, Register_Address,kt_bus_rx_buff, 2 );
"99
[e = _ret1 ( _host_iic_read_data (4 , , , -> -> 0 `i `uc _Register_Address &U _kt_bus_rx_buff -> -> 2 `i `us ]
[; ;KT0646M.c: 100: reg_value = kt_bus_rx_buff[0];
"100
[e = _reg_value -> *U + &U _kt_bus_rx_buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _kt_bus_rx_buff `ui `ux `us ]
[; ;KT0646M.c: 101: reg_value = (reg_value << 8) | (kt_bus_rx_buff[1]);
"101
[e = _reg_value -> | << -> _reg_value `ui -> 8 `i -> *U + &U _kt_bus_rx_buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _kt_bus_rx_buff `ui `ux `ui `us ]
[; ;KT0646M.c: 104: return reg_value;
"104
[e ) _reg_value ]
[e $UE 12  ]
[; ;KT0646M.c: 105: }
"105
[e :UE 12 ]
}
"118
[v _KT_WirelessMicTx_PreInit `(us ~T0 @X0 1 ef ]
"119
{
[; ;KT0646M.c: 118: u16 KT_WirelessMicTx_PreInit(void)
[; ;KT0646M.c: 119: {
[e :U _KT_WirelessMicTx_PreInit ]
[f ]
[; ;KT0646M.c: 120: KT_Bus_Init();
"120
[e ( _KT_Bus_Init ..  ]
"123
[v _regx `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 123: u16 regx = 0;
[e = _regx -> -> 0 `i `us ]
"124
[v _i `uc ~T0 @X0 1 a ]
[; ;KT0646M.c: 124: u8 i;
[; ;KT0646M.c: 125: for (i = 0; i < 3; i++) {
"125
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 3 `i 14  ]
[e $U 15  ]
[e :U 14 ]
{
[; ;KT0646M.c: 126: regx = KT_Bus_Read(0x01);
"126
[e = _regx ( _KT_Bus_Read (1 -> -> 1 `i `uc ]
[; ;KT0646M.c: 127: DelayUs(10*1000);
"127
[e ( _DelayUs (1 -> * -> 10 `i -> 1000 `i `uc ]
[; ;KT0646M.c: 129: if (regx == 0x4B54) {
"129
[e $ ! == -> _regx `ui -> -> 19284 `i `ui 17  ]
{
[; ;KT0646M.c: 130: return regx;
"130
[e ) _regx ]
[e $UE 13  ]
"131
}
[e :U 17 ]
"132
}
"125
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 3 `i 14  ]
[e :U 15 ]
"132
}
[; ;KT0646M.c: 131: }
[; ;KT0646M.c: 132: }
[; ;KT0646M.c: 134: return 0;
"134
[e ) -> -> 0 `i `us ]
[e $UE 13  ]
[; ;KT0646M.c: 135: }
"135
[e :UE 13 ]
}
"137
[v _KT_Test_Init `(uc ~T0 @X0 1 ef ]
"138
{
[; ;KT0646M.c: 137: bool KT_Test_Init(void)
[; ;KT0646M.c: 138: {
[e :U _KT_Test_Init ]
[f ]
"139
[v _regx `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 139: u16 regx = 0;
[e = _regx -> -> 0 `i `us ]
[; ;KT0646M.c: 141: DelayUs(50*1000);
"141
[e ( _DelayUs (1 -> * -> 50 `i -> 1000 `i `uc ]
[; ;KT0646M.c: 143: regx = KT_Bus_Read(0x03);
"143
[e = _regx ( _KT_Bus_Read (1 -> -> 3 `i `uc ]
[; ;KT0646M.c: 144: KT_Bus_Write(0x03, (regx & 0xfffe) | 1);
"144
[e ( _KT_Bus_Write (2 , -> -> 3 `i `uc -> | & -> _regx `ui -> 65534 `ui -> -> 1 `i `ui `us ]
[; ;KT0646M.c: 145: regx = KT_Bus_Read(0x03);
"145
[e = _regx ( _KT_Bus_Read (1 -> -> 3 `i `uc ]
[; ;KT0646M.c: 146: }
"146
[e :UE 18 ]
}
"160
[v _KT_WirelessMicTx_Init `(uc ~T0 @X0 1 ef ]
"161
{
[; ;KT0646M.c: 160: bool KT_WirelessMicTx_Init(void)
[; ;KT0646M.c: 161: {
[e :U _KT_WirelessMicTx_Init ]
[f ]
"162
[v _regx `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 162: u16 regx;
[; ;KT0646M.c: 164: DelayUs(50*1000);
"164
[e ( _DelayUs (1 -> * -> 50 `i -> 1000 `i `uc ]
[; ;KT0646M.c: 166: regx = KT_Bus_Read(0x03);
"166
[e = _regx ( _KT_Bus_Read (1 -> -> 3 `i `uc ]
[; ;KT0646M.c: 167: KT_Bus_Write(0x03, (regx & 0xfffe) | 1);
"167
[e ( _KT_Bus_Write (2 , -> -> 3 `i `uc -> | & -> _regx `ui -> 65534 `ui -> -> 1 `i `ui `us ]
[; ;KT0646M.c: 169: regx = KT_Bus_Read(0x24);
"169
[e = _regx ( _KT_Bus_Read (1 -> -> 36 `i `uc ]
[; ;KT0646M.c: 170: KT_Bus_Write(0x24, (regx & 0xEFFF) | (1 << 12));
"170
[e ( _KT_Bus_Write (2 , -> -> 36 `i `uc -> | & -> _regx `ui -> 61439 `ui -> << -> 1 `i -> 12 `i `ui `us ]
[; ;KT0646M.c: 173: regx=KT_Bus_Read(0x47);
"173
[e = _regx ( _KT_Bus_Read (1 -> -> 71 `i `uc ]
[; ;KT0646M.c: 174: KT_Bus_Write(0x47,(regx | 0x0200));
"174
[e ( _KT_Bus_Write (2 , -> -> 71 `i `uc -> | -> _regx `ui -> -> 512 `i `ui `us ]
[; ;KT0646M.c: 177: regx = KT_Bus_Read(0x0a);
"177
[e = _regx ( _KT_Bus_Read (1 -> -> 10 `i `uc ]
[; ;KT0646M.c: 178: KT_Bus_Write(0x0a, regx | 0x0200);
"178
[e ( _KT_Bus_Write (2 , -> -> 10 `i `uc -> | -> _regx `ui -> -> 512 `i `ui `us ]
[; ;KT0646M.c: 180: regx = KT_Bus_Read(0x1C);
"180
[e = _regx ( _KT_Bus_Read (1 -> -> 28 `i `uc ]
[; ;KT0646M.c: 181: KT_Bus_Write(0x1C, (regx & 0xF1E1)|( 0 << 10)|( 0 << 9 )|( 1 << 1 ));
"181
[e ( _KT_Bus_Write (2 , -> -> 28 `i `uc -> | | | & -> _regx `ui -> 61921 `ui -> << -> 0 `i -> 10 `i `ui -> << -> 0 `i -> 9 `i `ui -> << -> 1 `i -> 1 `i `ui `us ]
[; ;KT0646M.c: 182: KT_WirelessMicTx_COMPANDOR_Dis(0);
"182
[e ( _KT_WirelessMicTx_COMPANDOR_Dis (1 -> -> 0 `i `uc ]
[; ;KT0646M.c: 184: KT_WirelessMicTx_Mic_Sens(4);
"184
[e ( _KT_WirelessMicTx_Mic_Sens (1 -> -> 4 `i `uc ]
[; ;KT0646M.c: 187: regx = KT_Bus_Read(0x1e);
"187
[e = _regx ( _KT_Bus_Read (1 -> -> 30 `i `uc ]
[; ;KT0646M.c: 188: KT_Bus_Write(0x1e, (regx & 0xffdf)|(1<<5));
"188
[e ( _KT_Bus_Write (2 , -> -> 30 `i `uc -> | & -> _regx `ui -> 65503 `ui -> << -> 1 `i -> 5 `i `ui `us ]
[; ;KT0646M.c: 190: regx=KT_Bus_Read(0x30);
"190
[e = _regx ( _KT_Bus_Read (1 -> -> 48 `i `uc ]
[; ;KT0646M.c: 191: KT_Bus_Write(0x30, ( regx & 0x8000 ) | (3 << 11) | (4 << 7) | (3 << 4) |
[; ;KT0646M.c: 192: (4 << 1) | 1 );
"192
[e ( _KT_Bus_Write (2 , -> -> 48 `i `uc -> | | | | | & -> _regx `ui -> 32768 `ui -> << -> 3 `i -> 11 `i `ui -> << -> 4 `i -> 7 `i `ui -> << -> 3 `i -> 4 `i `ui -> << -> 4 `i -> 1 `i `ui -> -> 1 `i `ui `us ]
[; ;KT0646M.c: 194: regx=KT_Bus_Read(0x31);
"194
[e = _regx ( _KT_Bus_Read (1 -> -> 49 `i `uc ]
[; ;KT0646M.c: 195: KT_Bus_Write( 0x31, ( regx & 0xff00 ) | (1 << 6) | (1 << 4) |
[; ;KT0646M.c: 196: (1 << 3) | 3 );
"196
[e ( _KT_Bus_Write (2 , -> -> 49 `i `uc -> | | | | & -> _regx `ui -> 65280 `ui -> << -> 1 `i -> 6 `i `ui -> << -> 1 `i -> 4 `i `ui -> << -> 1 `i -> 3 `i `ui -> -> 3 `i `ui `us ]
[; ;KT0646M.c: 198: regx=KT_Bus_Read(0x39);
"198
[e = _regx ( _KT_Bus_Read (1 -> -> 57 `i `uc ]
[; ;KT0646M.c: 199: KT_Bus_Write(0x39,(regx & 0xFC00) | (15 << 6) | (1 << 5) |
[; ;KT0646M.c: 200: (0 << 4) | 8);
"200
[e ( _KT_Bus_Write (2 , -> -> 57 `i `uc -> | | | | & -> _regx `ui -> 64512 `ui -> << -> 15 `i -> 6 `i `ui -> << -> 1 `i -> 5 `i `ui -> << -> 0 `i -> 4 `i `ui -> -> 8 `i `ui `us ]
[; ;KT0646M.c: 202: KT_Bus_Write( 0x3a,(1 << 15) | (1 << 14) | (68 << 7) |
[; ;KT0646M.c: 203: (3 << 4) | 6 );
"203
[e ( _KT_Bus_Write (2 , -> -> 58 `i `uc -> | | | | << -> 1 `i -> 15 `i << -> 1 `i -> 14 `i << -> 68 `i -> 7 `i << -> 3 `i -> 4 `i -> 6 `i `us ]
[; ;KT0646M.c: 206: regx=KT_Bus_Read(0x25);
"206
[e = _regx ( _KT_Bus_Read (1 -> -> 37 `i `uc ]
[; ;KT0646M.c: 207: KT_Bus_Write( 0x25,(regx&0xc000)|(0 << 13) | (0x13 << 8) |
[; ;KT0646M.c: 208: (4 << 4) | 4 );
"208
[e ( _KT_Bus_Write (2 , -> -> 37 `i `uc -> | | | | & -> _regx `ui -> 49152 `ui -> << -> 0 `i -> 13 `i `ui -> << -> 19 `i -> 8 `i `ui -> << -> 4 `i -> 4 `i `ui -> -> 4 `i `ui `us ]
[; ;KT0646M.c: 209: regx=KT_Bus_Read(0x26);
"209
[e = _regx ( _KT_Bus_Read (1 -> -> 38 `i `uc ]
[; ;KT0646M.c: 210: KT_Bus_Write( 0x26,(regx&0xfffb)|(1 << 2));
"210
[e ( _KT_Bus_Write (2 , -> -> 38 `i `uc -> | & -> _regx `ui -> 65531 `ui -> << -> 1 `i -> 2 `i `ui `us ]
[; ;KT0646M.c: 214: regx=KT_Bus_Read(0x1f);
"214
[e = _regx ( _KT_Bus_Read (1 -> -> 31 `i `uc ]
[; ;KT0646M.c: 221: KT_Bus_Write(0x1f,(regx&0x80f0)|(1 << 14)|(3 << 12) |
[; ;KT0646M.c: 222: (3 << 9)|1);
"222
[e ( _KT_Bus_Write (2 , -> -> 31 `i `uc -> | | | | & -> _regx `ui -> 33008 `ui -> << -> 1 `i -> 14 `i `ui -> << -> 3 `i -> 12 `i `ui -> << -> 3 `i -> 9 `i `ui -> -> 1 `i `ui `us ]
[; ;KT0646M.c: 223: KT_Bus_Write(0x20,(0x13 << 8) | 0x12);
"223
[e ( _KT_Bus_Write (2 , -> -> 32 `i `uc -> | << -> 19 `i -> 8 `i -> 18 `i `us ]
[; ;KT0646M.c: 224: KT_Bus_Write(0x21,(0x27 << 8) | 0x14);
"224
[e ( _KT_Bus_Write (2 , -> -> 33 `i `uc -> | << -> 39 `i -> 8 `i -> 20 `i `us ]
[; ;KT0646M.c: 238: regx=KT_Bus_Read(0x10);
"238
[e = _regx ( _KT_Bus_Read (1 -> -> 16 `i `uc ]
[; ;KT0646M.c: 239: KT_Bus_Write(0x10,(regx | 0x0010));
"239
[e ( _KT_Bus_Write (2 , -> -> 16 `i `uc -> | -> _regx `ui -> -> 16 `i `ui `us ]
[; ;KT0646M.c: 240: regx=KT_Bus_Read(0x45);
"240
[e = _regx ( _KT_Bus_Read (1 -> -> 69 `i `uc ]
[; ;KT0646M.c: 241: KT_Bus_Write(0x45,((regx&0xfff0) | 0x0007));
"241
[e ( _KT_Bus_Write (2 , -> -> 69 `i `uc -> | & -> _regx `ui -> 65520 `ui -> -> 7 `i `ui `us ]
[; ;KT0646M.c: 243: regx=KT_Bus_Read(0x2d);
"243
[e = _regx ( _KT_Bus_Read (1 -> -> 45 `i `uc ]
[; ;KT0646M.c: 244: KT_Bus_Write(0x2d,(regx & 0xfff8) | 3);
"244
[e ( _KT_Bus_Write (2 , -> -> 45 `i `uc -> | & -> _regx `ui -> 65528 `ui -> -> 3 `i `ui `us ]
[; ;KT0646M.c: 257: return(1);
"257
[e ) -> -> 1 `i `uc ]
[e $UE 19  ]
[; ;KT0646M.c: 258: }
"258
[e :UE 19 ]
}
"271
[v _KT_WirelessMicTx_Standby `(uc ~T0 @X0 1 ef ]
"272
{
[; ;KT0646M.c: 271: bool KT_WirelessMicTx_Standby(void)
[; ;KT0646M.c: 272: {
[e :U _KT_WirelessMicTx_Standby ]
[f ]
[; ;KT0646M.c: 273: KT_WirelessMicTx_PowerDownProcedure();
"273
[e ( _KT_WirelessMicTx_PowerDownProcedure ..  ]
[; ;KT0646M.c: 274: return(1);
"274
[e ) -> -> 1 `i `uc ]
[e $UE 20  ]
[; ;KT0646M.c: 275: }
"275
[e :UE 20 ]
}
"288
[v _KT_WirelessMicTx_WakeUp `(uc ~T0 @X0 1 ef ]
"289
{
[; ;KT0646M.c: 288: bool KT_WirelessMicTx_WakeUp(void)
[; ;KT0646M.c: 289: {
[e :U _KT_WirelessMicTx_WakeUp ]
[f ]
"290
[v _reg3 `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 290: u16 reg3;
[; ;KT0646M.c: 291: reg3 = KT_Bus_Read(0x03);
"291
[e = _reg3 ( _KT_Bus_Read (1 -> -> 3 `i `uc ]
[; ;KT0646M.c: 292: KT_Bus_Write(0x03, (reg3 & 0x7FFF) | (0 << 15));
"292
[e ( _KT_Bus_Write (2 , -> -> 3 `i `uc -> | & -> _reg3 `ui -> -> 32767 `i `ui -> << -> 0 `i -> 15 `i `ui `us ]
[; ;KT0646M.c: 293: DelayUs(50*1000);
"293
[e ( _DelayUs (1 -> * -> 50 `i -> 1000 `i `uc ]
[; ;KT0646M.c: 294: KT_WirelessMicTx_Init();
"294
[e ( _KT_WirelessMicTx_Init ..  ]
[; ;KT0646M.c: 296: return(1);
"296
[e ) -> -> 1 `i `uc ]
[e $UE 21  ]
[; ;KT0646M.c: 297: }
"297
[e :UE 21 ]
}
"310
[v _KT_WirelessMicTx_PASW `(uc ~T0 @X0 1 ef1`uc ]
"311
{
[; ;KT0646M.c: 310: bool KT_WirelessMicTx_PASW(bool bPA_Switch)
[; ;KT0646M.c: 311: {
[e :U _KT_WirelessMicTx_PASW ]
"310
[v _bPA_Switch `uc ~T0 @X0 1 r1 ]
"311
[f ]
"312
[v _regF `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 312: u16 regF;
[; ;KT0646M.c: 314: regF = KT_Bus_Read(0x0F);
"314
[e = _regF ( _KT_Bus_Read (1 -> -> 15 `i `uc ]
[; ;KT0646M.c: 315: KT_Bus_Write(0x0F, (regF & 0xFFF7) | ( (u8)bPA_Switch << 3 ));
"315
[e ( _KT_Bus_Write (2 , -> -> 15 `i `uc -> | & -> _regF `ui -> 65527 `ui -> << -> _bPA_Switch `i -> 3 `i `ui `us ]
[; ;KT0646M.c: 316: return(1);
"316
[e ) -> -> 1 `i `uc ]
[e $UE 22  ]
[; ;KT0646M.c: 317: }
"317
[e :UE 22 ]
}
"330
[v _KT_WirelessMicTx_PAGain `(uc ~T0 @X0 1 ef1`uc ]
"331
{
[; ;KT0646M.c: 330: bool KT_WirelessMicTx_PAGain(u8 cPaGain)
[; ;KT0646M.c: 331: {
[e :U _KT_WirelessMicTx_PAGain ]
"330
[v _cPaGain `uc ~T0 @X0 1 r1 ]
"331
[f ]
"332
[v _reg11 `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 332: u16 reg11;
[; ;KT0646M.c: 334: reg11 = KT_Bus_Read(0x11);
"334
[e = _reg11 ( _KT_Bus_Read (1 -> -> 17 `i `uc ]
[; ;KT0646M.c: 335: KT_Bus_Write(0x11, (reg11 & 0xFF00 ) | cPaGain );
"335
[e ( _KT_Bus_Write (2 , -> -> 17 `i `uc -> | & -> _reg11 `ui -> 65280 `ui -> _cPaGain `ui `us ]
[; ;KT0646M.c: 337: return(1);
"337
[e ) -> -> 1 `i `uc ]
[e $UE 23  ]
[; ;KT0646M.c: 338: }
"338
[e :UE 23 ]
}
"351
[v _KT_WirelessMicTx_Fdev_Monitor `(uc ~T0 @X0 1 ef ]
"352
{
[; ;KT0646M.c: 351: u8 KT_WirelessMicTx_Fdev_Monitor(void)
[; ;KT0646M.c: 352: {
[e :U _KT_WirelessMicTx_Fdev_Monitor ]
[f ]
"353
[v _reg1C `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 353: u16 reg1C;
[; ;KT0646M.c: 355: reg1C = KT_Bus_Read(0x1C);
"355
[e = _reg1C ( _KT_Bus_Read (1 -> -> 28 `i `uc ]
[; ;KT0646M.c: 357: return( (reg1C & 0xF000) >> 12 );
"357
[e ) -> >> & -> _reg1C `ui -> 61440 `ui -> 12 `i `uc ]
[e $UE 24  ]
[; ;KT0646M.c: 359: }
"359
[e :UE 24 ]
}
"361
[v _KT_WirelessMicTx_Read_Mic_Sens `(uc ~T0 @X0 1 ef ]
"362
{
[; ;KT0646M.c: 361: u8 KT_WirelessMicTx_Read_Mic_Sens(void)
[; ;KT0646M.c: 362: {
[e :U _KT_WirelessMicTx_Read_Mic_Sens ]
[f ]
"363
[v _reg1C `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 363: u16 reg1C;
[; ;KT0646M.c: 365: reg1C = KT_Bus_Read(0x1C);
"365
[e = _reg1C ( _KT_Bus_Read (1 -> -> 28 `i `uc ]
[; ;KT0646M.c: 366: log_info("KT_WirelessMicTx_Read_Mic_Sens=%d\r\n",(reg1C & 0x1E0) >> 5);
"366
[e ( _log_info , :s 1C >> & -> _reg1C `ui -> -> 480 `i `ui -> 5 `i ]
[; ;KT0646M.c: 367: return( (reg1C & 0x1E0) >> 5 );
"367
[e ) -> >> & -> _reg1C `ui -> -> 480 `i `ui -> 5 `i `uc ]
[e $UE 25  ]
[; ;KT0646M.c: 369: }
"369
[e :UE 25 ]
}
"383
[v _KT_WirelessMicTx_Mic_Sens `(uc ~T0 @X0 1 ef1`uc ]
"384
{
[; ;KT0646M.c: 383: bool KT_WirelessMicTx_Mic_Sens(u8 cMicSens)
[; ;KT0646M.c: 384: {
[e :U _KT_WirelessMicTx_Mic_Sens ]
"383
[v _cMicSens `uc ~T0 @X0 1 r1 ]
"384
[f ]
"385
[v _reg1C `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 385: u16 reg1C;
[; ;KT0646M.c: 387: reg1C = KT_Bus_Read(0x1C);
"387
[e = _reg1C ( _KT_Bus_Read (1 -> -> 28 `i `uc ]
[; ;KT0646M.c: 388: KT_Bus_Write(0x1C, (reg1C & 0xFE1F) | ( (u16)cMicSens << 5 ));
"388
[e ( _KT_Bus_Write (2 , -> -> 28 `i `uc -> | & -> _reg1C `ui -> 65055 `ui << -> -> _cMicSens `us `ui -> 5 `i `us ]
[; ;KT0646M.c: 390: return(1);
"390
[e ) -> -> 1 `i `uc ]
[e $UE 26  ]
[; ;KT0646M.c: 391: }
"391
[e :UE 26 ]
}
"426
[v _KT_WirelessMicTx_MuteSel `(uc ~T0 @X0 1 ef1`uc ]
"427
{
[; ;KT0646M.c: 426: bool KT_WirelessMicTx_MuteSel(bool bMute_Sel)
[; ;KT0646M.c: 427: {
[e :U _KT_WirelessMicTx_MuteSel ]
"426
[v _bMute_Sel `uc ~T0 @X0 1 r1 ]
"427
[f ]
"428
[v _reg1C `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 428: u16 reg1C;
[; ;KT0646M.c: 430: reg1C = KT_Bus_Read(0x1C);
"430
[e = _reg1C ( _KT_Bus_Read (1 -> -> 28 `i `uc ]
[; ;KT0646M.c: 431: KT_Bus_Write(0x1C, (reg1C & 0xFFFE) | bMute_Sel);
"431
[e ( _KT_Bus_Write (2 , -> -> 28 `i `uc -> | & -> _reg1C `ui -> 65534 `ui -> _bMute_Sel `ui `us ]
[; ;KT0646M.c: 433: return(1);
"433
[e ) -> -> 1 `i `uc ]
[e $UE 27  ]
[; ;KT0646M.c: 434: }
"434
[e :UE 27 ]
}
"447
[v _KT_WirelessMicTx_Pilot `(uc ~T0 @X0 1 ef1`uc ]
"448
{
[; ;KT0646M.c: 447: bool KT_WirelessMicTx_Pilot(bool bPilot_Dis)
[; ;KT0646M.c: 448: {
[e :U _KT_WirelessMicTx_Pilot ]
"447
[v _bPilot_Dis `uc ~T0 @X0 1 r1 ]
"448
[f ]
"449
[v _reg1F `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 449: u16 reg1F;
[; ;KT0646M.c: 451: reg1F = KT_Bus_Read(0x1F);
"451
[e = _reg1F ( _KT_Bus_Read (1 -> -> 31 `i `uc ]
[; ;KT0646M.c: 456: KT_Bus_Write(0x1F, (reg1F & 0x7FFF) | ( (u16)bPilot_Dis << 15 ));
"456
[e ( _KT_Bus_Write (2 , -> -> 31 `i `uc -> | & -> _reg1F `ui -> -> 32767 `i `ui << -> -> _bPilot_Dis `us `ui -> 15 `i `us ]
[; ;KT0646M.c: 458: DelayUs(20*1000);
"458
[e ( _DelayUs (1 -> * -> 20 `i -> 1000 `i `uc ]
[; ;KT0646M.c: 460: return(1);
"460
[e ) -> -> 1 `i `uc ]
[e $UE 28  ]
[; ;KT0646M.c: 461: }
"461
[e :UE 28 ]
}
"474
[v _KT_WirelessMicTx_Pilot_Fdev `(uc ~T0 @X0 1 ef1`uc ]
"475
{
[; ;KT0646M.c: 474: bool KT_WirelessMicTx_Pilot_Fdev(u8 cPilot_Fdev)
[; ;KT0646M.c: 475: {
[e :U _KT_WirelessMicTx_Pilot_Fdev ]
"474
[v _cPilot_Fdev `uc ~T0 @X0 1 r1 ]
"475
[f ]
"476
[v _reg1F `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 476: u16 reg1F;
[; ;KT0646M.c: 478: reg1F = KT_Bus_Read(0x1F);
"478
[e = _reg1F ( _KT_Bus_Read (1 -> -> 31 `i `uc ]
[; ;KT0646M.c: 483: KT_Bus_Write(0x1F, (reg1F & 0xFE7F) | ((u16)cPilot_Fdev << 7));
"483
[e ( _KT_Bus_Write (2 , -> -> 31 `i `uc -> | & -> _reg1F `ui -> 65151 `ui << -> -> _cPilot_Fdev `us `ui -> 7 `i `us ]
[; ;KT0646M.c: 485: DelayUs(20*1000);
"485
[e ( _DelayUs (1 -> * -> 20 `i -> 1000 `i `uc ]
[; ;KT0646M.c: 487: return(1);
"487
[e ) -> -> 1 `i `uc ]
[e $UE 29  ]
[; ;KT0646M.c: 488: }
"488
[e :UE 29 ]
}
"611
[v _KT_WirelessMicTx_BatteryMeter_Read `(us ~T0 @X0 1 ef ]
"612
{
[; ;KT0646M.c: 611: u16 KT_WirelessMicTx_BatteryMeter_Read(void)
[; ;KT0646M.c: 612: {
[e :U _KT_WirelessMicTx_BatteryMeter_Read ]
[f ]
"613
[v _reg7 `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 613: u16 reg7;
[; ;KT0646M.c: 615: reg7 = KT_Bus_Read(0x07);
"615
[e = _reg7 ( _KT_Bus_Read (1 -> -> 7 `i `uc ]
[; ;KT0646M.c: 617: return( reg7 & 0x07FF );
"617
[e ) -> & -> _reg7 `ui -> -> 2047 `i `ui `us ]
[e $UE 30  ]
[; ;KT0646M.c: 618: }
"618
[e :UE 30 ]
}
"635
[v _lopa_div_tab `Cuc ~T0 @X0 -> 13 `i s ]
[i _lopa_div_tab
:U ..
"637
-> -> 6 `i `uc
-> -> 8 `i `uc
-> -> 10 `i `uc
-> -> 12 `i `uc
"638
-> -> 16 `i `uc
-> -> 20 `i `uc
-> -> 24 `i `uc
"639
-> -> 32 `i `uc
-> -> 40 `i `uc
-> -> 48 `i `uc
"640
-> -> 64 `i `uc
-> -> 80 `i `uc
"641
-> -> 96 `i `uc
..
]
[; ;KT0646M.c: 635: static const u8 lopa_div_tab[13]=
[; ;KT0646M.c: 636: {
[; ;KT0646M.c: 637: 6, 8, 10, 12,
[; ;KT0646M.c: 638: 16, 20, 24,
[; ;KT0646M.c: 639: 32, 40, 48,
[; ;KT0646M.c: 640: 64, 80, 96
[; ;KT0646M.c: 641: };
[v F455 `Cuc ~T0 @X0 -> 2 `i t ]
"644
[v _lopa_div_tab2 `F455 ~T0 @X0 -> 13 `i s ]
[i _lopa_div_tab2
:U ..
:U ..
"646
-> -> 0 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 1 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 2 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 3 `i `uc
..
:U ..
"647
-> -> 1 `i `uc
-> -> 1 `i `uc
..
:U ..
-> -> 1 `i `uc
-> -> 2 `i `uc
..
:U ..
-> -> 1 `i `uc
-> -> 3 `i `uc
..
:U ..
"648
-> -> 2 `i `uc
-> -> 1 `i `uc
..
:U ..
-> -> 2 `i `uc
-> -> 2 `i `uc
..
:U ..
-> -> 2 `i `uc
-> -> 3 `i `uc
..
:U ..
"649
-> -> 3 `i `uc
-> -> 1 `i `uc
..
:U ..
-> -> 3 `i `uc
-> -> 2 `i `uc
..
:U ..
-> -> 3 `i `uc
-> -> 3 `i `uc
..
..
]
[; ;KT0646M.c: 644: static const u8 lopa_div_tab2[13][2]=
[; ;KT0646M.c: 645: {
[; ;KT0646M.c: 646: {0,0},{0,1}, {0,2}, {0,3},
[; ;KT0646M.c: 647: {1,1}, {1,2}, {1,3},
[; ;KT0646M.c: 648: {2,1}, {2,2}, {2,3},
[; ;KT0646M.c: 649: {3,1}, {3,2}, {3,3}
[; ;KT0646M.c: 650: };
"654
[v _KT_WirelessMicTx_Calc_ChanReg `(uc ~T0 @X0 1 ef8`i`*uc`*uc`*us`*us`*uc`*ui`i ]
"657
{
[; ;KT0646M.c: 654: bool KT_WirelessMicTx_Calc_ChanReg(s32 Freq, u8 *lopa_div1_ptr,u8 *lopa_div2_ptr,
[; ;KT0646M.c: 655: u16 *chan_ptr, u16 *chan_frac_ptr,
[; ;KT0646M.c: 656: u8 *chan_frac_msb_ptr, u32 *chan_frac_temp_ptr,s32 xtal_freq)
[; ;KT0646M.c: 657: {
[e :U _KT_WirelessMicTx_Calc_ChanReg ]
"654
[v _Freq `i ~T0 @X0 1 r1 ]
[v _lopa_div1_ptr `*uc ~T0 @X0 1 r2 ]
[v _lopa_div2_ptr `*uc ~T0 @X0 1 r3 ]
"655
[v _chan_ptr `*us ~T0 @X0 1 r4 ]
[v _chan_frac_ptr `*us ~T0 @X0 1 r5 ]
"656
[v _chan_frac_msb_ptr `*uc ~T0 @X0 1 r6 ]
[v _chan_frac_temp_ptr `*ui ~T0 @X0 1 r7 ]
[v _xtal_freq `i ~T0 @X0 1 r8 ]
"657
[f ]
"658
[v _chan_frac `ui ~T0 @X0 1 a ]
"659
[v _Fvco `i ~T0 @X0 1 a ]
"660
[v _temp `ui ~T0 @X0 1 a ]
[v _tempMin `ui ~T0 @X0 1 a ]
[; ;KT0646M.c: 658: u32 chan_frac;
[; ;KT0646M.c: 659: s32 Fvco;
[; ;KT0646M.c: 660: u32 temp,tempMin=xtal_freq;
[e = _tempMin -> _xtal_freq `ui ]
"663
[v _i `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 663: u16 i = 12;
[e = _i -> -> 12 `i `us ]
"664
[v _lopa_div `uc ~T0 @X0 1 a ]
"666
[v _vco_highth `l ~T0 @X0 1 a ]
[; ;KT0646M.c: 664: u8 lopa_div;
[; ;KT0646M.c: 666: long vco_highth = 4320000;
[e = _vco_highth -> 4320000 `l ]
[; ;KT0646M.c: 669: lopa_div = vco_highth / Freq;
"669
[e = _lopa_div -> / _vco_highth -> _Freq `l `uc ]
[; ;KT0646M.c: 671: for(i=0; i<12; i++)
"671
{
[e = _i -> -> 0 `i `us ]
[e $ < -> _i `ui -> -> 12 `i `ui 32  ]
[e $U 33  ]
"672
[e :U 32 ]
[; ;KT0646M.c: 672: {
{
[; ;KT0646M.c: 673: if(lopa_div < lopa_div_tab[i])
"673
[e $ ! < -> _lopa_div `i -> *U + &U _lopa_div_tab * -> _i `ux -> -> # *U &U _lopa_div_tab `ui `ux `i 35  ]
[; ;KT0646M.c: 674: {
"674
{
[; ;KT0646M.c: 675: break;
"675
[e $U 33  ]
"676
}
[e :U 35 ]
"677
}
"671
[e ++ _i -> -> 1 `i `us ]
[e $ < -> _i `ui -> -> 12 `i `ui 32  ]
[e :U 33 ]
"677
}
[; ;KT0646M.c: 676: }
[; ;KT0646M.c: 677: }
[; ;KT0646M.c: 679: *lopa_div1_ptr = lopa_div_tab2[i][1];
"679
[e = *U _lopa_div1_ptr *U + &U *U + &U _lopa_div_tab2 * -> _i `ux -> * -> # *U &U *U &U _lopa_div_tab2 `ui -> -> 2 `i `ui `ux * -> -> -> 1 `i `ui `ux -> -> # *U &U *U + &U _lopa_div_tab2 * -> _i `ux -> * -> # *U &U *U &U _lopa_div_tab2 `ui -> -> 2 `i `ui `ux `ui `ux ]
[; ;KT0646M.c: 680: *lopa_div2_ptr = lopa_div_tab2[i][0];
"680
[e = *U _lopa_div2_ptr *U + &U *U + &U _lopa_div_tab2 * -> _i `ux -> * -> # *U &U *U &U _lopa_div_tab2 `ui -> -> 2 `i `ui `ux * -> -> -> 0 `i `ui `ux -> -> # *U &U *U + &U _lopa_div_tab2 * -> _i `ux -> * -> # *U &U *U &U _lopa_div_tab2 `ui -> -> 2 `i `ui `ux `ui `ux ]
[; ;KT0646M.c: 683: Fvco = Freq * lopa_div_tab[i];
"683
[e = _Fvco * _Freq -> *U + &U _lopa_div_tab * -> _i `ux -> -> # *U &U _lopa_div_tab `ui `ux `i ]
[; ;KT0646M.c: 685: *chan_ptr = Fvco / (xtal_freq * 6) + 1;
"685
[e = *U _chan_ptr -> + / _Fvco * _xtal_freq -> 6 `i -> 1 `i `us ]
[; ;KT0646M.c: 693: chan_frac= (((Fvco % (xtal_freq * 6))-(xtal_freq * 6))<<12)/((xtal_freq * 6)>>4);
"693
[e = _chan_frac -> / << - % _Fvco * _xtal_freq -> 6 `i * _xtal_freq -> 6 `i -> 12 `i >> * _xtal_freq -> 6 `i -> 4 `i `ui ]
[; ;KT0646M.c: 695: *chan_frac_msb_ptr = (chan_frac & 0x00030000) >> 16 ;
"695
[e = *U _chan_frac_msb_ptr -> >> & -> _chan_frac `l -> 196608 `l -> 16 `i `uc ]
[; ;KT0646M.c: 696: *chan_frac_ptr = chan_frac & 0x0000ffff;
"696
[e = *U _chan_frac_ptr -> & _chan_frac -> 65535 `ui `us ]
[; ;KT0646M.c: 705: for(i=1;i<4;i++)
"705
{
[e = _i -> -> 1 `i `us ]
[e $ < -> _i `ui -> -> 4 `i `ui 36  ]
[e $U 37  ]
"706
[e :U 36 ]
[; ;KT0646M.c: 706: {
{
[; ;KT0646M.c: 707: temp = ((xtal_freq/(2*i))-abs(((Freq%(xtal_freq/i))-(xtal_freq/(2*i)))))*i;
"707
[e = _temp * - / -> _xtal_freq `ui * -> -> 2 `i `ui -> _i `ui -> ( _abs (1 -> - % -> _Freq `ui / -> _xtal_freq `ui -> _i `ui / -> _xtal_freq `ui * -> -> 2 `i `ui -> _i `ui `i `ui -> _i `ui ]
[; ;KT0646M.c: 708: if(temp<tempMin)
"708
[e $ ! < _temp _tempMin 39  ]
[; ;KT0646M.c: 709: {
"709
{
[; ;KT0646M.c: 710: tempMin=temp;
"710
[e = _tempMin _temp ]
"711
}
[e :U 39 ]
"712
}
"705
[e ++ _i -> -> 1 `i `us ]
[e $ < -> _i `ui -> -> 4 `i `ui 36  ]
[e :U 37 ]
"712
}
[; ;KT0646M.c: 711: }
[; ;KT0646M.c: 712: }
[; ;KT0646M.c: 713: i=8;
"713
[e = _i -> -> 8 `i `us ]
[; ;KT0646M.c: 714: temp = ((xtal_freq/(2*i))-abs(((Freq%(xtal_freq/i))-(xtal_freq/(2*i)))))*i;
"714
[e = _temp * - / -> _xtal_freq `ui * -> -> 2 `i `ui -> _i `ui -> ( _abs (1 -> - % -> _Freq `ui / -> _xtal_freq `ui -> _i `ui / -> _xtal_freq `ui * -> -> 2 `i `ui -> _i `ui `i `ui -> _i `ui ]
[; ;KT0646M.c: 715: if(temp<tempMin)
"715
[e $ ! < _temp _tempMin 40  ]
[; ;KT0646M.c: 716: {
"716
{
[; ;KT0646M.c: 717: tempMin=temp;
"717
[e = _tempMin _temp ]
"718
}
[e :U 40 ]
[; ;KT0646M.c: 718: }
[; ;KT0646M.c: 719: *chan_frac_temp_ptr=tempMin*(3072000/xtal_freq);
"719
[e = *U _chan_frac_temp_ptr -> * -> _tempMin `l / -> 3072000 `l -> _xtal_freq `l `ui ]
[; ;KT0646M.c: 720: return(1);
"720
[e ) -> -> 1 `i `uc ]
[e $UE 31  ]
[; ;KT0646M.c: 721: }
"721
[e :UE 31 ]
}
"741
[v _use24M `Cui ~T0 @X0 -> 26 `i s ]
[i _use24M
:U ..
"742
-> -> 490500 `l `ui
-> -> 492000 `l `ui
-> -> 516000 `l `ui
-> -> 541500 `l `ui
-> -> 556000 `l `ui
-> -> 565500 `l `ui
-> -> 566000 `l `ui
-> -> 590000 `l `ui
-> -> 614000 `l `ui
-> -> 615000 `l `ui
-> -> 639000 `l `ui
-> -> 651250 `l `ui
-> -> 688000 `l `ui
"743
-> -> 688500 `l `ui
-> -> 712000 `l `ui
-> -> 712250 `l `ui
-> -> 712500 `l `ui
-> -> 722500 `l `ui
-> -> 736500 `l `ui
-> -> 760500 `l `ui
-> -> 762000 `l `ui
-> -> 787500 `l `ui
-> -> 810000 `l `ui
-> -> 811500 `l `ui
-> -> 835500 `l `ui
"744
-> -> 859500 `l `ui
..
]
[; ;KT0646M.c: 741: static const u32 use24M[26] =
[; ;KT0646M.c: 742: { 490500,492000,516000,541500,556000,565500,566000,590000,614000,615000,639000,651250,688000,
[; ;KT0646M.c: 743: 688500,712000,712250,712500,722500,736500,760500,762000,787500,810000,811500,835500,859500
[; ;KT0646M.c: 744: };
"747
[v _use24576M `Cui ~T0 @X0 -> 14 `i s ]
[i _use24576M
:U ..
"749
-> -> 7500 `i `ui
-> -> 9000 `i `ui
-> -> 10000 `i `ui
-> -> 10500 `i `ui
-> -> 12000 `i `ui
-> -> 13500 `i `ui
-> -> 14000 `i `ui
-> -> 15000 `i `ui
-> -> 16000 `i `ui
-> -> 16500 `i `ui
-> -> 18000 `i `ui
-> -> 19500 `i `ui
-> -> 20000 `i `ui
"750
-> -> 22000 `i `ui
..
]
[; ;KT0646M.c: 747: static const u32 use24576M[14] =
[; ;KT0646M.c: 748: {
[; ;KT0646M.c: 749: 7500,9000,10000,10500,12000,13500,14000,15000,16000,16500,18000,19500,20000,22000
[; ;KT0646M.c: 750: };
"754
[v _KT_WirelessMicTx_Tune `(uc ~T0 @X0 1 ef1`i ]
"755
{
[; ;KT0646M.c: 754: bool KT_WirelessMicTx_Tune(s32 Freq)
[; ;KT0646M.c: 755: {
[e :U _KT_WirelessMicTx_Tune ]
"754
[v _Freq `i ~T0 @X0 1 r1 ]
"755
[f ]
"756
[v _chan0 `us ~T0 @X0 1 a ]
"757
[v _chan_frac0 `us ~T0 @X0 1 a ]
"758
[v _chan_frac_msb0 `uc ~T0 @X0 1 a ]
"759
[v _lopa_div10 `uc ~T0 @X0 1 a ]
[v _lopa_div20 `uc ~T0 @X0 1 a ]
"760
[v _regx `us ~T0 @X0 1 a ]
[v _regy `us ~T0 @X0 1 a ]
"761
[v _chan_frac_temp0 `ui ~T0 @X0 1 a ]
"762
[v _state `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 756: u16 chan0;
[; ;KT0646M.c: 757: u16 chan_frac0;
[; ;KT0646M.c: 758: u8 chan_frac_msb0;
[; ;KT0646M.c: 759: u8 lopa_div10,lopa_div20;
[; ;KT0646M.c: 760: u16 regx,regy;
[; ;KT0646M.c: 761: u32 chan_frac_temp0;
[; ;KT0646M.c: 762: u16 state;
[; ;KT0646M.c: 778: regx=KT_Bus_Read(0x2d);
"778
[e = _regx ( _KT_Bus_Read (1 -> -> 45 `i `uc ]
[; ;KT0646M.c: 779: KT_Bus_Write(0x2d, (regx&0xf7ff));
"779
[e ( _KT_Bus_Write (2 , -> -> 45 `i `uc -> & -> _regx `ui -> 63487 `ui `us ]
[; ;KT0646M.c: 781: regx=KT_Bus_Read(0x0a);
"781
[e = _regx ( _KT_Bus_Read (1 -> -> 10 `i `uc ]
[; ;KT0646M.c: 782: KT_Bus_Write(0x0a, (regx&0xffef));
"782
[e ( _KT_Bus_Write (2 , -> -> 10 `i `uc -> & -> _regx `ui -> 65519 `ui `us ]
[; ;KT0646M.c: 783: regx=KT_Bus_Read(0x3d);
"783
[e = _regx ( _KT_Bus_Read (1 -> -> 61 `i `uc ]
[; ;KT0646M.c: 784: KT_Bus_Write(0x3d, (regx&0xffbf));
"784
[e ( _KT_Bus_Write (2 , -> -> 61 `i `uc -> & -> _regx `ui -> 65471 `ui `us ]
[; ;KT0646M.c: 786: regx=KT_Bus_Read(0x3c);
"786
[e = _regx ( _KT_Bus_Read (1 -> -> 60 `i `uc ]
[; ;KT0646M.c: 787: KT_Bus_Write(0x3c, (regx&0xfffd));
"787
[e ( _KT_Bus_Write (2 , -> -> 60 `i `uc -> & -> _regx `ui -> 65533 `ui `us ]
[; ;KT0646M.c: 799: KT_WirelessMicTx_Calc_ChanReg(Freq, &lopa_div10, &lopa_div20, &chan0, &chan_frac0,
[; ;KT0646M.c: 800: &chan_frac_msb0,&chan_frac_temp0,24576);
"800
[e ( _KT_WirelessMicTx_Calc_ChanReg (4 , , , , , , , _Freq &U _lopa_div10 &U _lopa_div20 &U _chan0 &U _chan_frac0 &U _chan_frac_msb0 &U _chan_frac_temp0 -> 24576 `i ]
[; ;KT0646M.c: 801: log_info("lopa_div1_ptr[%d],lopa_div2_ptr[%d],chan_ptr[%d],chan_frac_ptr[%04X],chan_frac_msb_ptr[%d],chan_frac_temp_ptr[%04x]",lopa_div10,lopa_div20,chan0,chan_frac0,chan_frac_msb0,chan_frac_temp0);
"801
[e ( _log_info , , , , , , :s 2C -> _lopa_div10 `i -> _lopa_div20 `i -> _chan0 `i -> _chan_frac0 `i -> _chan_frac_msb0 `i _chan_frac_temp0 ]
[; ;KT0646M.c: 875: if (Freq > 180000)
"875
[e $ ! > -> _Freq `l -> 180000 `l 42  ]
[; ;KT0646M.c: 876: {
"876
{
[; ;KT0646M.c: 877: KT_Bus_Write(0x08,(chan0 << 10) | (lopa_div10 << 8) | (lopa_div20 << 6) | (1 << 5) |
[; ;KT0646M.c: 878: (0 << 4) | (0 <<2) | chan_frac_msb0);
"878
[e ( _KT_Bus_Write (2 , -> -> 8 `i `uc -> | | | | | | << -> _chan0 `ui -> 10 `i -> << -> _lopa_div10 `i -> 8 `i `ui -> << -> _lopa_div20 `i -> 6 `i `ui -> << -> 1 `i -> 5 `i `ui -> << -> 0 `i -> 4 `i `ui -> << -> 0 `i -> 2 `i `ui -> _chan_frac_msb0 `ui `us ]
"879
}
[; ;KT0646M.c: 879: }
[e $U 43  ]
"880
[e :U 42 ]
[; ;KT0646M.c: 880: else
[; ;KT0646M.c: 881: {
"881
{
[; ;KT0646M.c: 882: KT_Bus_Write(0x08,(chan0 << 10) | (lopa_div10 << 8) | (lopa_div20 << 6) | (1 << 5) |
[; ;KT0646M.c: 883: (1 << 4) | (0 <<2) | chan_frac_msb0);
"883
[e ( _KT_Bus_Write (2 , -> -> 8 `i `uc -> | | | | | | << -> _chan0 `ui -> 10 `i -> << -> _lopa_div10 `i -> 8 `i `ui -> << -> _lopa_div20 `i -> 6 `i `ui -> << -> 1 `i -> 5 `i `ui -> << -> 1 `i -> 4 `i `ui -> << -> 0 `i -> 2 `i `ui -> _chan_frac_msb0 `ui `us ]
"884
}
[e :U 43 ]
[; ;KT0646M.c: 884: }
[; ;KT0646M.c: 886: regy=chan_frac0|0x0001;
"886
[e = _regy -> | -> _chan_frac0 `ui -> -> 1 `i `ui `us ]
[; ;KT0646M.c: 887: KT_Bus_Write(0x09, regy);
"887
[e ( _KT_Bus_Write (2 , -> -> 9 `i `uc _regy ]
[; ;KT0646M.c: 888: DelayUs(1*10);
"888
[e ( _DelayUs (1 -> * -> 1 `i -> 10 `i `uc ]
[; ;KT0646M.c: 889: regx=KT_Bus_Read(0x08);
"889
[e = _regx ( _KT_Bus_Read (1 -> -> 8 `i `uc ]
[; ;KT0646M.c: 890: regy=KT_Bus_Read(0x09);
"890
[e = _regy ( _KT_Bus_Read (1 -> -> 9 `i `uc ]
[; ;KT0646M.c: 891: log_info("chn[%d]: reg[0x08]=[0x%04x], reg[0x09]= [0x%04x]\r\n",0, regx,regy);
"891
[e ( _log_info , , , :s 3C -> 0 `i -> _regx `i -> _regy `i ]
[; ;KT0646M.c: 896: regx = KT_Bus_Read(0x0e);
"896
[e = _regx ( _KT_Bus_Read (1 -> -> 14 `i `uc ]
[; ;KT0646M.c: 897: KT_Bus_Write(0x0e, regx | 0x0080);
"897
[e ( _KT_Bus_Write (2 , -> -> 14 `i `uc -> | -> _regx `ui -> -> 128 `i `ui `us ]
[; ;KT0646M.c: 898: regx = KT_Bus_Read(0x0e);
"898
[e = _regx ( _KT_Bus_Read (1 -> -> 14 `i `uc ]
[; ;KT0646M.c: 899: KT_Bus_Write(0x0e, regx | 0x0100);
"899
[e ( _KT_Bus_Write (2 , -> -> 14 `i `uc -> | -> _regx `ui -> -> 256 `i `ui `us ]
[; ;KT0646M.c: 900: DelayUs(1*1000);
"900
[e ( _DelayUs (1 -> * -> 1 `i -> 1000 `i `uc ]
[; ;KT0646M.c: 901: regx = KT_Bus_Read(0x0e);
"901
[e = _regx ( _KT_Bus_Read (1 -> -> 14 `i `uc ]
[; ;KT0646M.c: 902: KT_Bus_Write(0x0e, regx & 0xfeff);
"902
[e ( _KT_Bus_Write (2 , -> -> 14 `i `uc -> & -> _regx `ui -> 65279 `ui `us ]
[; ;KT0646M.c: 904: regx=KT_Bus_Read(0x0a);
"904
[e = _regx ( _KT_Bus_Read (1 -> -> 10 `i `uc ]
[; ;KT0646M.c: 905: KT_Bus_Write(0x0a,regx|0x0020);
"905
[e ( _KT_Bus_Write (2 , -> -> 10 `i `uc -> | -> _regx `ui -> -> 32 `i `ui `us ]
[; ;KT0646M.c: 907: regx=KT_Bus_Read(0x0d);
"907
[e = _regx ( _KT_Bus_Read (1 -> -> 13 `i `uc ]
[; ;KT0646M.c: 908: regx = (regx&0x0800)>>11;
"908
[e = _regx -> >> & -> _regx `ui -> -> 2048 `i `ui -> 11 `i `us ]
"910
[v _retry `i ~T0 @X0 1 a ]
[; ;KT0646M.c: 910: int retry = 100;
[e = _retry -> 100 `i ]
[; ;KT0646M.c: 911: while(!regx && retry--)
"911
[e $U 44  ]
[e :U 45 ]
[; ;KT0646M.c: 912: {
"912
{
[; ;KT0646M.c: 913: regx=KT_Bus_Read(0x0d);
"913
[e = _regx ( _KT_Bus_Read (1 -> -> 13 `i `uc ]
[; ;KT0646M.c: 914: regx = (regx&0x0800)>>11;
"914
[e = _regx -> >> & -> _regx `ui -> -> 2048 `i `ui -> 11 `i `us ]
[; ;KT0646M.c: 915: DelayUs(5*1000);
"915
[e ( _DelayUs (1 -> * -> 5 `i -> 1000 `i `uc ]
"916
}
[e :U 44 ]
"911
[e $ && ! != -> _regx `ui -> -> -> 0 `i `us `ui != -- _retry -> 1 `i -> 0 `i 45  ]
[e :U 46 ]
[; ;KT0646M.c: 916: }
[; ;KT0646M.c: 917: if (regx == 0) {
"917
[e $ ! == -> _regx `ui -> -> 0 `i `ui 47  ]
{
[; ;KT0646M.c: 918: log_info("pll not ready after first tune!\r\n");
"918
[e ( _log_info :s 4C ]
[; ;KT0646M.c: 919: return 0;
"919
[e ) -> -> 0 `i `uc ]
[e $UE 41  ]
"920
}
[e :U 47 ]
[; ;KT0646M.c: 920: }
[; ;KT0646M.c: 927: regx=KT_Bus_Read(0x2e);
"927
[e = _regx ( _KT_Bus_Read (1 -> -> 46 `i `uc ]
[; ;KT0646M.c: 928: state=regx&0x1C00;
"928
[e = _state -> & -> _regx `ui -> -> 7168 `i `ui `us ]
[; ;KT0646M.c: 929: state=state>>10;
"929
[e = _state -> >> -> _state `ui -> 10 `i `us ]
[; ;KT0646M.c: 930: if(state >= 3)
"930
[e $ ! >= -> _state `ui -> -> 3 `i `ui 48  ]
[; ;KT0646M.c: 931: {
"931
{
[; ;KT0646M.c: 932: state = 7;
"932
[e = _state -> -> 7 `i `us ]
"933
}
[; ;KT0646M.c: 933: }
[e $U 49  ]
"934
[e :U 48 ]
[; ;KT0646M.c: 934: else
[; ;KT0646M.c: 935: {
"935
{
[; ;KT0646M.c: 936: state = (state<<1) + 3;
"936
[e = _state -> + << -> _state `ui -> 1 `i -> -> 3 `i `ui `us ]
"937
}
[e :U 49 ]
[; ;KT0646M.c: 937: }
[; ;KT0646M.c: 938: regx = (regx & 0xe3ff) | (state<<10);
"938
[e = _regx -> | & -> _regx `ui -> 58367 `ui << -> _state `ui -> 10 `i `us ]
[; ;KT0646M.c: 940: regy=KT_Bus_Read(0x2d);
"940
[e = _regy ( _KT_Bus_Read (1 -> -> 45 `i `uc ]
[; ;KT0646M.c: 941: KT_Bus_Write(0x2d, (regy|0x0800));
"941
[e ( _KT_Bus_Write (2 , -> -> 45 `i `uc -> | -> _regy `ui -> -> 2048 `i `ui `us ]
[; ;KT0646M.c: 943: KT_Bus_Write(0x2e, regx);
"943
[e ( _KT_Bus_Write (2 , -> -> 46 `i `uc _regx ]
[; ;KT0646M.c: 945: regx=KT_Bus_Read(0x2a);
"945
[e = _regx ( _KT_Bus_Read (1 -> -> 42 `i `uc ]
[; ;KT0646M.c: 946: state=(regx&0x007e)>>1;
"946
[e = _state -> >> & -> _regx `ui -> -> 126 `i `ui -> 1 `i `us ]
[; ;KT0646M.c: 947: regx=KT_Bus_Read(0x3d);
"947
[e = _regx ( _KT_Bus_Read (1 -> -> 61 `i `uc ]
[; ;KT0646M.c: 948: KT_Bus_Write(0x3d, (regx&0xff80)|(1<<6)|state);
"948
[e ( _KT_Bus_Write (2 , -> -> 61 `i `uc -> | | & -> _regx `ui -> 65408 `ui -> << -> 1 `i -> 6 `i `ui -> _state `ui `us ]
[; ;KT0646M.c: 950: regx=KT_Bus_Read(0x0a);
"950
[e = _regx ( _KT_Bus_Read (1 -> -> 10 `i `uc ]
[; ;KT0646M.c: 951: KT_Bus_Write(0x0a, (regx|0x0010));
"951
[e ( _KT_Bus_Write (2 , -> -> 10 `i `uc -> | -> _regx `ui -> -> 16 `i `ui `us ]
[; ;KT0646M.c: 953: regx=KT_Bus_Read(0x3c);
"953
[e = _regx ( _KT_Bus_Read (1 -> -> 60 `i `uc ]
[; ;KT0646M.c: 954: KT_Bus_Write(0x3c, (regx|0x0002));
"954
[e ( _KT_Bus_Write (2 , -> -> 60 `i `uc -> | -> _regx `ui -> -> 2 `i `ui `us ]
[; ;KT0646M.c: 956: regx=KT_Bus_Read(0x0a);
"956
[e = _regx ( _KT_Bus_Read (1 -> -> 10 `i `uc ]
[; ;KT0646M.c: 957: KT_Bus_Write(0x0a,regx|0x0020);
"957
[e ( _KT_Bus_Write (2 , -> -> 10 `i `uc -> | -> _regx `ui -> -> 32 `i `ui `us ]
[; ;KT0646M.c: 959: regx=KT_Bus_Read(0x0d);
"959
[e = _regx ( _KT_Bus_Read (1 -> -> 13 `i `uc ]
[; ;KT0646M.c: 960: regx = (regx&0x0800)>>11;
"960
[e = _regx -> >> & -> _regx `ui -> -> 2048 `i `ui -> 11 `i `us ]
[; ;KT0646M.c: 962: retry = 200;
"962
[e = _retry -> 200 `i ]
[; ;KT0646M.c: 963: while(!regx && retry--)
"963
[e $U 50  ]
[e :U 51 ]
[; ;KT0646M.c: 964: {
"964
{
[; ;KT0646M.c: 965: regx=KT_Bus_Read(0x0d);
"965
[e = _regx ( _KT_Bus_Read (1 -> -> 13 `i `uc ]
[; ;KT0646M.c: 966: regx = (regx&0x0800)>>11;
"966
[e = _regx -> >> & -> _regx `ui -> -> 2048 `i `ui -> 11 `i `us ]
[; ;KT0646M.c: 967: DelayUs(10*1000);
"967
[e ( _DelayUs (1 -> * -> 10 `i -> 1000 `i `uc ]
"968
}
[e :U 50 ]
"963
[e $ && ! != -> _regx `ui -> -> -> 0 `i `us `ui != -- _retry -> 1 `i -> 0 `i 51  ]
[e :U 52 ]
[; ;KT0646M.c: 968: }
[; ;KT0646M.c: 969: if (regx == 0) {
"969
[e $ ! == -> _regx `ui -> -> 0 `i `ui 53  ]
{
[; ;KT0646M.c: 970: log_info("pll not ready after second tune!\r\n");
"970
[e ( _log_info :s 5C ]
[; ;KT0646M.c: 971: return 0;
"971
[e ) -> -> 0 `i `uc ]
[e $UE 41  ]
"972
}
[e :U 53 ]
[; ;KT0646M.c: 972: }
[; ;KT0646M.c: 975: regx=KT_Bus_Read(0x1f);
"975
[e = _regx ( _KT_Bus_Read (1 -> -> 31 `i `uc ]
[; ;KT0646M.c: 976: KT_Bus_Write(0x1f,regx&~0x4000);
"976
[e ( _KT_Bus_Write (2 , -> -> 31 `i `uc -> & -> _regx `ui -> ~ -> 16384 `i `ui `us ]
[; ;KT0646M.c: 977: regx=KT_Bus_Read(0x1f);
"977
[e = _regx ( _KT_Bus_Read (1 -> -> 31 `i `uc ]
[; ;KT0646M.c: 978: KT_Bus_Write(0x1f,regx|0x4000);
"978
[e ( _KT_Bus_Write (2 , -> -> 31 `i `uc -> | -> _regx `ui -> -> 16384 `i `ui `us ]
[; ;KT0646M.c: 979: return(1);
"979
[e ) -> -> 1 `i `uc ]
[e $UE 41  ]
[; ;KT0646M.c: 980: }
"980
[e :UE 41 ]
}
"995
[v _KT_WirelessMicTx_Set_XTAL `(uc ~T0 @X0 1 ef1`uc ]
"996
{
[; ;KT0646M.c: 995: u8 KT_WirelessMicTx_Set_XTAL(bool bXtal_Sel)
[; ;KT0646M.c: 996: {
[e :U _KT_WirelessMicTx_Set_XTAL ]
"995
[v _bXtal_Sel `uc ~T0 @X0 1 r1 ]
"996
[f ]
"997
[v _regx `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 997: u16 regx;
[; ;KT0646M.c: 999: regx = KT_Bus_Read(0x1E);
"999
[e = _regx ( _KT_Bus_Read (1 -> -> 30 `i `uc ]
[; ;KT0646M.c: 1000: KT_Bus_Write(0x1E,regx|0x0010);
"1000
[e ( _KT_Bus_Write (2 , -> -> 30 `i `uc -> | -> _regx `ui -> -> 16 `i `ui `us ]
[; ;KT0646M.c: 1001: KT_Bus_Write(0x0E, 0x0002);
"1001
[e ( _KT_Bus_Write (2 , -> -> 14 `i `uc -> -> 2 `i `us ]
[; ;KT0646M.c: 1002: regx = KT_Bus_Read(0x0E);
"1002
[e = _regx ( _KT_Bus_Read (1 -> -> 14 `i `uc ]
[; ;KT0646M.c: 1003: KT_Bus_Write(0x0E, regx | 0x0004);
"1003
[e ( _KT_Bus_Write (2 , -> -> 14 `i `uc -> | -> _regx `ui -> -> 4 `i `ui `us ]
[; ;KT0646M.c: 1005: regx = KT_Bus_Read(0x47);
"1005
[e = _regx ( _KT_Bus_Read (1 -> -> 71 `i `uc ]
[; ;KT0646M.c: 1006: KT_Bus_Write( 0x47, (regx & 0xFFDF) | ((u8)bXtal_Sel << 5) );
"1006
[e ( _KT_Bus_Write (2 , -> -> 71 `i `uc -> | & -> _regx `ui -> 65503 `ui -> << -> _bXtal_Sel `i -> 5 `i `ui `us ]
[; ;KT0646M.c: 1008: DelayUs(50*1000);
"1008
[e ( _DelayUs (1 -> * -> 50 `i -> 1000 `i `uc ]
[; ;KT0646M.c: 1010: KT_Bus_Write(0x0E, 0x0000);
"1010
[e ( _KT_Bus_Write (2 , -> -> 14 `i `uc -> -> 0 `i `us ]
[; ;KT0646M.c: 1011: regx = KT_Bus_Read(0x1E);
"1011
[e = _regx ( _KT_Bus_Read (1 -> -> 30 `i `uc ]
[; ;KT0646M.c: 1012: KT_Bus_Write(0x1E, regx&~0x0010);
"1012
[e ( _KT_Bus_Write (2 , -> -> 30 `i `uc -> & -> _regx `ui -> ~ -> 16 `i `ui `us ]
[; ;KT0646M.c: 1016: return(1);
"1016
[e ) -> -> 1 `i `uc ]
[e $UE 54  ]
[; ;KT0646M.c: 1017: }
"1017
[e :UE 54 ]
}
"1030
[v _KT_WirelessMicTx_SW_XTAL_Freq `(uc ~T0 @X0 1 ef1`uc ]
"1031
{
[; ;KT0646M.c: 1030: u8 KT_WirelessMicTx_SW_XTAL_Freq(bool bXtal_Sel)
[; ;KT0646M.c: 1031: {
[e :U _KT_WirelessMicTx_SW_XTAL_Freq ]
"1030
[v _bXtal_Sel `uc ~T0 @X0 1 r1 ]
"1031
[f ]
"1032
[v _regx `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 1032: u16 regx;
[; ;KT0646M.c: 1034: regx = KT_Bus_Read(0x47);
"1034
[e = _regx ( _KT_Bus_Read (1 -> -> 71 `i `uc ]
[; ;KT0646M.c: 1035: if (bXtal_Sel==1)
"1035
[e $ ! == -> _bXtal_Sel `i -> 1 `i 56  ]
[; ;KT0646M.c: 1036: {
"1036
{
[; ;KT0646M.c: 1038: if ((regx & 0x0020)==0)
"1038
[e $ ! == & -> _regx `ui -> -> 32 `i `ui -> -> 0 `i `ui 57  ]
[; ;KT0646M.c: 1039: KT_WirelessMicTx_Set_XTAL(bXtal_Sel);
"1039
[e ( _KT_WirelessMicTx_Set_XTAL (1 _bXtal_Sel ]
[e :U 57 ]
"1040
}
[; ;KT0646M.c: 1040: }
[e $U 58  ]
"1041
[e :U 56 ]
[; ;KT0646M.c: 1041: else
[; ;KT0646M.c: 1042: {
"1042
{
[; ;KT0646M.c: 1044: if ((regx & 0x0020)!=0)
"1044
[e $ ! != & -> _regx `ui -> -> 32 `i `ui -> -> 0 `i `ui 59  ]
[; ;KT0646M.c: 1045: KT_WirelessMicTx_Set_XTAL(bXtal_Sel);
"1045
[e ( _KT_WirelessMicTx_Set_XTAL (1 _bXtal_Sel ]
[e :U 59 ]
"1046
}
[e :U 58 ]
[; ;KT0646M.c: 1046: }
[; ;KT0646M.c: 1047: return(1);
"1047
[e ) -> -> 1 `i `uc ]
[e $UE 55  ]
[; ;KT0646M.c: 1048: }
"1048
[e :UE 55 ]
}
"1061
[v _KT_WirelessMicTx_PowerDownProcedure `(v ~T0 @X0 1 ef ]
"1062
{
[; ;KT0646M.c: 1061: void KT_WirelessMicTx_PowerDownProcedure(void)
[; ;KT0646M.c: 1062: {
[e :U _KT_WirelessMicTx_PowerDownProcedure ]
[f ]
"1063
[v _regx `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 1063: u16 regx;
[; ;KT0646M.c: 1065: KT_WirelessMicTx_MuteSel(1);
"1065
[e ( _KT_WirelessMicTx_MuteSel (1 -> -> 1 `i `uc ]
[; ;KT0646M.c: 1067: KT_WirelessMicTx_Pilot(0);
"1067
[e ( _KT_WirelessMicTx_Pilot (1 -> -> 0 `i `uc ]
[; ;KT0646M.c: 1071: KT_WirelessMicTx_PASW(0);
"1071
[e ( _KT_WirelessMicTx_PASW (1 -> -> 0 `i `uc ]
[; ;KT0646M.c: 1074: regx=KT_Bus_Read(0x0a);
"1074
[e = _regx ( _KT_Bus_Read (1 -> -> 10 `i `uc ]
[; ;KT0646M.c: 1075: KT_Bus_Write(0x0a,regx|0x1000);
"1075
[e ( _KT_Bus_Write (2 , -> -> 10 `i `uc -> | -> _regx `ui -> -> 4096 `i `ui `us ]
[; ;KT0646M.c: 1077: regx = KT_Bus_Read(0x03);
"1077
[e = _regx ( _KT_Bus_Read (1 -> -> 3 `i `uc ]
[; ;KT0646M.c: 1078: KT_Bus_Write(0x03, regx | (1 << 15));
"1078
[e ( _KT_Bus_Write (2 , -> -> 3 `i `uc -> | -> _regx `ui -> << -> 1 `i -> 15 `i `ui `us ]
[; ;KT0646M.c: 1080: }
"1080
[e :UE 60 ]
}
"1096
[v _KT_WirelessMicTx_ECHO `(v ~T0 @X0 1 ef3`uc`uc`uc ]
"1097
{
[; ;KT0646M.c: 1096: void KT_WirelessMicTx_ECHO(bool bEcho_Dis,u8 Echo_Ratio,u8 Echo_Delay)
[; ;KT0646M.c: 1097: {
[e :U _KT_WirelessMicTx_ECHO ]
"1096
[v _bEcho_Dis `uc ~T0 @X0 1 r1 ]
[v _Echo_Ratio `uc ~T0 @X0 1 r2 ]
[v _Echo_Delay `uc ~T0 @X0 1 r3 ]
"1097
[f ]
"1098
[v _regx `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 1098: u16 regx;
[; ;KT0646M.c: 1099: if(bEcho_Dis==1)
"1099
[e $ ! == -> _bEcho_Dis `i -> 1 `i 62  ]
[; ;KT0646M.c: 1100: {
"1100
{
[; ;KT0646M.c: 1101: KT_Bus_Write( 0x32, (1 << 15) | (0 << 14) | (1 << 13) |
[; ;KT0646M.c: 1102: (0 << 8) | (Echo_Delay << 3) | 7 );
"1102
[e ( _KT_Bus_Write (2 , -> -> 50 `i `uc -> | | | | | << -> 1 `i -> 15 `i << -> 0 `i -> 14 `i << -> 1 `i -> 13 `i << -> 0 `i -> 8 `i << -> _Echo_Delay `i -> 3 `i -> 7 `i `us ]
"1103
}
[; ;KT0646M.c: 1103: }
[e $U 63  ]
"1104
[e :U 62 ]
[; ;KT0646M.c: 1104: else
[; ;KT0646M.c: 1105: {
"1105
{
[; ;KT0646M.c: 1106: KT_Bus_Write( 0x32, (1 << 15) | ((u8)bEcho_Dis << 14) | (1 << 13) |
[; ;KT0646M.c: 1107: (Echo_Ratio << 8) | (Echo_Delay << 3) | 7 );
"1107
[e ( _KT_Bus_Write (2 , -> -> 50 `i `uc -> | | | | | << -> 1 `i -> 15 `i << -> _bEcho_Dis `i -> 14 `i << -> 1 `i -> 13 `i << -> _Echo_Ratio `i -> 8 `i << -> _Echo_Delay `i -> 3 `i -> 7 `i `us ]
"1108
}
[e :U 63 ]
[; ;KT0646M.c: 1108: }
[; ;KT0646M.c: 1109: regx = KT_Bus_Read(0x33);
"1109
[e = _regx ( _KT_Bus_Read (1 -> -> 51 `i `uc ]
[; ;KT0646M.c: 1110: KT_Bus_Write( 0x33, (regx & 0xFFFC) | 0 );
"1110
[e ( _KT_Bus_Write (2 , -> -> 51 `i `uc -> | & -> _regx `ui -> 65532 `ui -> -> 0 `i `ui `us ]
[; ;KT0646M.c: 1111: }
"1111
[e :UE 61 ]
}
"1124
[v _KT_WirelessMicTx_EQSW `(v ~T0 @X0 1 ef1`uc ]
"1125
{
[; ;KT0646M.c: 1124: void KT_WirelessMicTx_EQSW(bool bEq_Dis)
[; ;KT0646M.c: 1125: {
[e :U _KT_WirelessMicTx_EQSW ]
"1124
[v _bEq_Dis `uc ~T0 @X0 1 r1 ]
"1125
[f ]
"1126
[v _regx `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 1126: u16 regx;
[; ;KT0646M.c: 1128: regx = KT_Bus_Read(0x34);
"1128
[e = _regx ( _KT_Bus_Read (1 -> -> 52 `i `uc ]
[; ;KT0646M.c: 1129: KT_Bus_Write(0x34, ((regx & 0x7FFF) | (u16)bEq_Dis << 15));
"1129
[e ( _KT_Bus_Write (2 , -> -> 52 `i `uc -> | & -> _regx `ui -> -> 32767 `i `ui << -> -> _bEq_Dis `us `ui -> 15 `i `us ]
[; ;KT0646M.c: 1130: }
"1130
[e :UE 64 ]
}
"1144
[v _KT_WirelessMicTx_EQGAIN `(v ~T0 @X0 1 ef2`uc`uc ]
"1145
{
[; ;KT0646M.c: 1144: void KT_WirelessMicTx_EQGAIN(u8 Eq_Freq,u8 Eq_Gain)
[; ;KT0646M.c: 1145: {
[e :U _KT_WirelessMicTx_EQGAIN ]
"1144
[v _Eq_Freq `uc ~T0 @X0 1 r1 ]
[v _Eq_Gain `uc ~T0 @X0 1 r2 ]
"1145
[f ]
"1146
[v _regx `us ~T0 @X0 1 a ]
"1147
[v _temp1 `uc ~T0 @X0 1 a ]
[v _temp2 `uc ~T0 @X0 1 a ]
[; ;KT0646M.c: 1146: u16 regx;
[; ;KT0646M.c: 1147: u8 temp1,temp2;
[; ;KT0646M.c: 1148: temp1=Eq_Freq/3+0x34;
"1148
[e = _temp1 -> + / -> _Eq_Freq `i -> 3 `i -> 52 `i `uc ]
[; ;KT0646M.c: 1149: temp2=(2-(Eq_Freq%3))*5;
"1149
[e = _temp2 -> * - -> 2 `i % -> _Eq_Freq `i -> 3 `i -> 5 `i `uc ]
[; ;KT0646M.c: 1150: regx = KT_Bus_Read(temp1);
"1150
[e = _regx ( _KT_Bus_Read (1 _temp1 ]
[; ;KT0646M.c: 1152: KT_Bus_Write(temp1, ((regx & ~(0x001f<<temp2)) | ( (u16)Eq_Gain << temp2 )));
"1152
[e ( _KT_Bus_Write (2 , _temp1 -> | & -> _regx `ui -> ~ << -> 31 `i _temp2 `ui << -> -> _Eq_Gain `us `ui _temp2 `us ]
[; ;KT0646M.c: 1236: }
"1236
[e :UE 65 ]
}
"1238
[v _KT_WirelessMicTx_COMPANDOR_Dis `(v ~T0 @X0 1 ef1`uc ]
"1239
{
[; ;KT0646M.c: 1238: void KT_WirelessMicTx_COMPANDOR_Dis(bool COMP_Dis)
[; ;KT0646M.c: 1239: {
[e :U _KT_WirelessMicTx_COMPANDOR_Dis ]
"1238
[v _COMP_Dis `uc ~T0 @X0 1 r1 ]
"1239
[f ]
"1240
[v _regx `us ~T0 @X0 1 a ]
[; ;KT0646M.c: 1240: u16 regx;
[; ;KT0646M.c: 1241: regx = KT_Bus_Read(0x1C);
"1241
[e = _regx ( _KT_Bus_Read (1 -> -> 28 `i `uc ]
[; ;KT0646M.c: 1242: if(COMP_Dis)
"1242
[e $ ! != -> _COMP_Dis `i -> -> -> 0 `i `uc `i 67  ]
[; ;KT0646M.c: 1243: {
"1243
{
[; ;KT0646M.c: 1244: KT_Bus_Write(0x1C, regx|0x0010);
"1244
[e ( _KT_Bus_Write (2 , -> -> 28 `i `uc -> | -> _regx `ui -> -> 16 `i `ui `us ]
[; ;KT0646M.c: 1245: regx = KT_Bus_Read(0x1D);
"1245
[e = _regx ( _KT_Bus_Read (1 -> -> 29 `i `uc ]
[; ;KT0646M.c: 1246: KT_Bus_Write(0x1D, (regx&0x8000)|0x4000);
"1246
[e ( _KT_Bus_Write (2 , -> -> 29 `i `uc -> | & -> _regx `ui -> 32768 `ui -> -> 16384 `i `ui `us ]
[; ;KT0646M.c: 1247: regx = KT_Bus_Read(0x1E);
"1247
[e = _regx ( _KT_Bus_Read (1 -> -> 30 `i `uc ]
[; ;KT0646M.c: 1248: KT_Bus_Write(0x1E, regx&0xfff0);
"1248
[e ( _KT_Bus_Write (2 , -> -> 30 `i `uc -> & -> _regx `ui -> 65520 `ui `us ]
"1249
}
[; ;KT0646M.c: 1249: }
[e $U 68  ]
"1250
[e :U 67 ]
[; ;KT0646M.c: 1250: else
[; ;KT0646M.c: 1251: {
"1251
{
[; ;KT0646M.c: 1252: KT_Bus_Write(0x1C, regx&~0x0010);
"1252
[e ( _KT_Bus_Write (2 , -> -> 28 `i `uc -> & -> _regx `ui -> ~ -> 16 `i `ui `us ]
"1253
}
[e :U 68 ]
[; ;KT0646M.c: 1253: }
[; ;KT0646M.c: 1254: }
"1254
[e :UE 66 ]
}
[a 2C 108 111 112 97 95 100 105 118 49 95 112 116 114 91 37 100 93 44 108 111 112 97 95 100 105 118 50 95 112 116 114 91 37 100 93 44 99 104 97 110 95 112 116 114 91 37 100 93 44 99 104 97 110 95 102 114 97 99 95 112 116 114 91 37 48 52 88 93 44 99 104 97 110 95 102 114 97 99 95 109 115 98 95 112 116 114 91 37 100 93 44 99 104 97 110 95 102 114 97 99 95 116 101 109 112 95 112 116 114 91 37 48 52 120 93 0 ]
[a 1C 75 84 95 87 105 114 101 108 101 115 115 77 105 99 84 120 95 82 101 97 100 95 77 105 99 95 83 101 110 115 61 37 100 13 10 0 ]
[a 3C 99 104 110 91 37 100 93 58 32 114 101 103 91 48 120 48 56 93 61 91 48 120 37 48 52 120 93 44 32 114 101 103 91 48 120 48 57 93 61 32 91 48 120 37 48 52 120 93 13 10 0 ]
[a 4C 112 108 108 32 110 111 116 32 114 101 97 100 121 32 97 102 116 101 114 32 102 105 114 115 116 32 116 117 110 101 33 13 10 0 ]
[a 5C 112 108 108 32 110 111 116 32 114 101 97 100 121 32 97 102 116 101 114 32 115 101 99 111 110 100 32 116 117 110 101 33 13 10 0 ]
